<?xml version='1.0' encoding='utf-8'?>

<!--****************************************************************************
* \file eco.cypersonality
* \version 3.0
*
* \brief
* ECO personality description file.
*
********************************************************************************
* \copyright
* Copyright (c) 2022-2025, Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the 'License');
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an 'AS IS' BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id='eco' name='ECO' version='3.0' xmlns='http://cypress.com/xsd/cyhwpersonality_v13'>
  <FittingRules>
    <MappingRules>
      <RequiresConnectivity>
        <SignalGroup type="ANY">
          <Signal port="eco_in[0]"/>
          <Signal port="eco_out[0]"/>
        </SignalGroup>
      </RequiresConnectivity>
      <IpBlock name='mxs40srss,mxs40srss_ver2,mxs40srss_ver3,mxs40ssrss' />
      <Resource name='srss\.clock\.eco' />
    </MappingRules>
  </FittingRules>

  <BehaviorImplementation>
    <Implements type='clock_pin_v1'>
      <ExposedMember key='frequency' paramId='frequency' />
      <ExposedMember key='accuracy' paramId='accuracyPct' />
      <ExposedMember key='suppressCodeGen' paramId='suppressCodeGen' />
    </Implements>
  </BehaviorImplementation>

  <Parameters>
    <!-- PDL documentation -->
    <ParamDoc id='pdlDoc' name='Configuration Help' group='Overview' default='file:///`${cy_libs_path()}`/docs/pdl/html/group__group__sysclk__eco.html' linkText='Open ECO Documentation' visible='true' desc='Opens the Peripheral Driver Library Documentation' />

    <ParamBool id='is40srss_ver2or3Available' default='`${(("mxs40srss_ver2" eq getIpBlockName()) || ("mxs40srss_ver3" eq getIpBlockName()))}`' />

    <ParamRange id='ecoFrequency' name='Frequency (MHz)' group='General' default='24.0000' visible='true' min='`${(is40srss_ver2or3Available ? 8 : 16)}`' max='`${(is40srss_ver2or3Available ? 33.34 : 35)}`' resolution='0.0001' desc='' />
    <ParamString id='frequency' default='`${ecoFrequency * 1000000}`' />

    <ParamRange id='accuracyPpm' name='Accuracy (±ppm)' group='General' default='0' min='0' max='1000000' resolution='1' visible='true' desc='Clock accuracy in ppm' />
    <ParamString id='accuracyPct' name='Accuracy (±%)' group='General' default='`${accuracyPpm/10000.0}`' visible='true' editable='false' desc='Clock accuracy in %' />

    <ParamRange id='driveLevel' name='Drive Level (uW)' group='General' default='100' min='1' max='1000' resolution='1' visible='true' desc='' />
    <ParamRange id='esr' name='Equivalent Series Resistance ESR (ohm)' group='General' default='50' min='1' max='1000' resolution='1' visible='true' desc='' />
    <ParamRange id='c0' name='Crystal Shunt Capacitance C0 (pF)' group='General' default='0' min='0' max='100' resolution='1' visible='true' desc='' />
    <ParamRange id='cLoad' name='Parallel Load Capacitance Cload (pF)' group='General' default='18' min='1' max='100' resolution='1' visible='true' desc='' />

    <!-- Restrict ECO connections to pins -->
    <ParamSignal port='eco_in[0]' name='Input' group='Connections' visible='true' desc='The input/passive terminal of the internal ECO circuitry' canBeEmpty='false' requirePreferred='true'>
      <Constraint type='REQUIRE' targetLocation='ioss\[\d+\]\.port\[\d+\]\.pin.*' valid='true' />
    </ParamSignal>
    <ParamSignal port='eco_out[0]' name='Output' group='Connections' visible='true' desc='The output/active terminal of the internal ECO circuitry' canBeEmpty='false' requirePreferred='true'>
      <Constraint type='REQUIRE' targetLocation='ioss\[\d+\]\.port\[\d+\]\.pin.*' valid='true' />
    </ParamSignal>

    <ParamBool id='suppressCodeGen' default='true' />
  </Parameters>

  <Variables>
    <Variable id='csum' value='`${c0 + cLoad}`' />
    <Variable id='maxAmpl' value='`${sqrt(driveLevel / (2.0 * esr)) * 1000 / (3.14 * ecoFrequency * csum)}`' />
    <Variable id='maxAmplpp' value='`${2 * maxAmpl}`' />
    <Variable id='gmMin' value='`${(5 * 4 * 3.14 * 3.14 * ecoFrequency * ecoFrequency * csum * csum * 4 * esr) / 1000000000}`' />
    <Variable id='amplSect' value='`${floor(gmMin / 9)}`' />

    <Variable id='error' value='`${(("mxs40srss" eq getIpBlockName()) ? (maxAmplpp &lt; 1.3 || amplSect &gt; 3) : (maxAmplpp &lt; 0.3 || amplSect &gt; 3))}`' />

    <Variable id='gpio_in_port' value='`${getInstFromLocation(getParamValue("eco_in[0]"), "port")}`' />
    <Variable id='gpio_in_pin' value='`${getInstFromLocation(getParamValue("eco_in[0]"), "pin")}`' />
    <Variable id='gpio_out_port' value='`${getInstFromLocation(getParamValue("eco_out[0]"), "port")}`' />
    <Variable id='gpio_out_pin' value='`${getInstFromLocation(getParamValue("eco_out[0]"), "pin")}`' />
  </Variables>

  <DRCs>
    <DRC type='ERROR' text='Parameters provided cause the maximum trans-conductance and amplitude control range to exceed the legal design limits.' condition='`${error}`' />
    <DRC type='ERROR' text='The sum of C0 and Cload should not exceed 100 pF.' condition='`${csum &gt; 100}`' />
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value='cy_gpio.h' />
    <ConfigInclude value='cy_sysclk.h' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_ENABLED' value='1' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_FREQ' value='`${frequency}`UL' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_GPIO_IN_PRT' value='GPIO_PRT`${gpio_in_port}`' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_GPIO_IN_PIN' value='`${gpio_in_pin}`' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_GPIO_OUT_PRT' value='GPIO_PRT`${gpio_out_port}`' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_GPIO_OUT_PIN' value='`${gpio_out_pin}`' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_CLOAD' value='`${cLoad}`UL' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_ESR' value='`${esr}`UL' public='false' />
    <ConfigDefine name='CY_CFG_SYSCLK_ECO_DRIVE_LEVEL' value='`${driveLevel}`UL' public='false' />
    <ConfigFunction signature='__STATIC_INLINE void Cy_SysClk_EcoInit(void)' public='false'>
      <Line value='(void)Cy_GPIO_Pin_FastInit(GPIO_PRT`${gpio_in_port}`, `${gpio_in_pin}`, CY_GPIO_DM_ANALOG, 0UL, HSIOM_SEL_GPIO);' />
      <Line value='(void)Cy_GPIO_Pin_FastInit(GPIO_PRT`${gpio_out_port}`, `${gpio_out_pin}`, CY_GPIO_DM_ANALOG, 0UL, HSIOM_SEL_GPIO);' />
      <Line value='if (CY_SYSCLK_BAD_PARAM == Cy_SysClk_EcoConfigure(CY_CFG_SYSCLK_ECO_FREQ, `${csum}`UL, `${esr}`UL, `${driveLevel}`UL))' />
      <Line value='{' />
      <Line value='    cycfg_ClockStartupError(CY_CFG_SYSCLK_ECO_ERROR);' />
      <Line value='}' />
      <Line value='if (CY_SYSCLK_TIMEOUT == Cy_SysClk_EcoEnable(3000UL))' />
      <Line value='{' />
      <Line value='    cycfg_ClockStartupError(CY_CFG_SYSCLK_ECO_ERROR);' />
      <Line value='}' />
      <Line value='Cy_SysClk_EcoSetFrequency(CY_CFG_SYSCLK_ECO_FREQ);' />
    </ConfigFunction>
  </ConfigFirmware>
</PersonalityTemplate>
